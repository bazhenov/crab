name: Release

permissions:
  contents: write

on:
  push:
    tags:
    - "[0-9]+.[0-9]+.[0-9]+"

jobs:
  create-release:
    name: create-release
    runs-on: ubuntu-22.04
    outputs:
      upload_url: ${{ steps.release.outputs.upload_url }}
    steps:
      - name: Create GitHub release
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: v${{ github.ref }}
          draft: true
          prerelease: true

  build-and-upload:
    needs: create-release
    strategy:
      matrix:
        include:
        - target: x86_64-unknown-linux-gnu
          os: ubuntu-22.04
        - target: x86_64-apple-darwin
          os: macos-11
    runs-on: ${{ matrix.os}}
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Rust
      run: rustup update stable && rustup default stable
    
    - name: Build Release
      run: |
        echo "RELEASE_FQN=crab-${{ github.ref_name }}-${{ matrix.target }}" >> $GITHUB_ENV
        cargo install --path=. --locked --root=release

    - name: Create Release Archive
      run: |
        mkdir archive
        cp release/bin/crab archive/
        cp README.md archive/
        mv archive ${RELEASE_FQN}
        tar czvf ${RELEASE_FQN}.tar.gz ${RELEASE_FQN}

    - name: Upload release archive
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ${RELEASE_FQN}.tar.gz
        asset_name: ${RELEASE_FQN}.tar.gz
        asset_content_type: application/octet-stream